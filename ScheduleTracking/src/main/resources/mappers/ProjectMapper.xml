<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cohen.scheduletracking.leader.dao.ProjectMapper">
    <sql id="columns">
        `name`,
        introduction,
        dept_id,
        begin_time,
        estimated_time,
        end_time,
        budget,
        manager_id,
        scheme_file,
        schedule,
        is_finish,
        create_user,
        create_time,
        update_user,
        update_time,
        is_delete
    </sql>
    <resultMap id="project" type="com.cohen.scheduletracking.entity.Project">
        <id column="id" property="id" />
        <result column="name" property="projectName" />
        <result column="introduction" property="projectDescribe" />
        <result column="dept_id" property="deptId" />
        <result column="begin_time" property="beginTime" />
        <result column="estimated_time" property="expectEndTime" />
        <result column="end_time" property="endTime" />
        <result column="budget" property="budget" />
        <result column="manager_id" property="managerId" />
        <result column="scheme_file" property="schemeFile" />
        <result column="schedule" property="schedule" />
        <result column="is_finish" property="finished" />
        <result column="create_user" property="createUser" />
        <result column="create_time" property="createTime" />
        <result column="update_user" property="updateUser" />
        <result column="update_time" property="updateTime" />
        <result column="is_delete" property="deleted" />
    </resultMap>
    <insert id="insert" parameterType="com.cohen.scheduletracking.entity.Project" keyProperty="id" useGeneratedKeys="true">
        insert into project(<include refid="columns" />) values(
            #{projectName}, #{projectDescribe}, #{deptId}, #{beginTime}, #{expectEndTime},
            #{endTime},#{budget}, #{managerId},#{schemeFile}, #{schedule},
            #{finished}, #{createUser}, #{createTime}, #{updateUser}, #{updateTime}, #{deleted}
        );
    </insert>
    <select id="list" parameterType="int" resultMap="project">
        select * from project as p where p.id=#{id} and is_delete='0'
    </select>
    <select id="listByProjectId" resultMap="project">
        select * from project as p where p.id in (<foreach collection="proIds" item="pid" separator=",">#{pid}</foreach>) and is_delete='0'
    </select>
    <select id="getProjectById" resultMap="project" parameterType="int">
        select * from project as p where p.id=#{id} and is_delete='0'
    </select>
</mapper>