<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.cohen.scheduletracking.dao.ProjectMapper">
    <sql id="columns">
        `id`,
        `name`,
        introduction,
        dept_id,
        begin_time,
        estimated_time,
        end_time,
        budget,
        manager_id,
        scheme_file,
        schedule,
        status,
        create_user,
        create_time,
        update_user,
        update_time,
        is_delete
    </sql>
    <resultMap id="project" type="com.cohen.scheduletracking.entity.Project">
        <id column="id" property="id" />
        <result column="name" property="projectName" />
        <result column="introduction" property="projectDescribe" />
        <result column="dept_id" property="deptId" />
        <result column="begin_time" property="beginTime" />
        <result column="estimated_time" property="expectEndTime" />
        <result column="end_time" property="endTime" />
        <result column="budget" property="budget" />
        <result column="manager_id" property="managerId" />
        <result column="scheme_file" property="schemeFile" />
        <result column="schedule" property="schedule" />
        <result column="status" property="status" />
        <result column="create_user" property="createUser" />
        <result column="create_time" property="createTime" />
        <result column="update_user" property="updateUser" />
        <result column="update_time" property="updateTime" />
        <result column="is_delete" property="deleted" />
    </resultMap>
    <insert id="insert" parameterType="com.cohen.scheduletracking.entity.Project" keyProperty="id" useGeneratedKeys="true">
        insert into project(<include refid="columns"/>) values(null,
        #{projectName}, #{projectDescribe}, #{deptId}, #{beginTime}, #{expectEndTime},
        #{endTime},#{budget}, #{managerId},#{schemeFile}, #{schedule},
        #{status}, #{createUser}, #{createTime}, #{updateUser}, #{updateTime}, #{deleted}
        );
    </insert>
    <select id="list" parameterType="int" resultMap="project">
        select * from project as p where p.id=#{id} and is_delete='0'
    </select>
    <select id="listByProjectId" resultMap="project">
        select * from project as p where p.id in (<foreach collection="proIds" item="pid" separator=",">#{pid}</foreach>) and is_delete='0'
    </select>
    <select id="getProjectById" resultMap="project" parameterType="int">
        select * from project as p where p.id=#{id} and is_delete='0'
    </select>
    <update id="finish">
        update `project` as t set t.status = #{status}, t.update_time = #{updateTime}, t.update_user = #{updateUser}, t.end_time = #{endTime} where t.id = #{id}
    </update>
    <!-- 按条件动态查询项目信息 -->
    <select id="listByParams" parameterType="com.cohen.scheduletracking.entity.Project" resultMap="project">
        select <include refid="columns" /> from project as p
            <where>
                <if test="project.id != null and project.id > 0">
                    and p.id = #{project.id}
                </if>
                <if test="project.projectName != null and project.projectName.trim() != ''">
                    and p.name like #{project.projectName}
                </if>
                <if test="project.deptId != null and project.deptId > 0">
                    and p.dept_id = #{project.deptId}
                </if>
                <if test="project.beginTime != null">
                    and p.begin_time &lt; #{project.beginTime}
                </if>
                <if test="project.endTime != null">
                    and p.end_time &gt; #{project.endTime}
                </if>
                <if test="project.managerId != null and project.managerId > 0">
                    and p.manager_id = #{project.managerId}
                </if>
                <if test="project.status != null and project.status.trim() != ''">
                    and p.status = #{project.status}
                </if>
                <if test="project.createUser != null and project.createUser > 0">
                    and p.create_user = #{project.createUser}
                </if>
                <if test="project.deleted != null and project.deleted.trim() != ''">
                    and p.is_delete = #{project.deleted}
                </if>
            </where>
    </select>
    <delete id="deleteByFileName" parameterType="string">
        delect from `project` where scheme_file=#{fileName}
    </delete>
</mapper>